// Version: 1.0.0
type Account = {owner : Principal; subaccount : ?Blob};
type AssocList<K, V> = List<(K, V)>;
type AssocList__1<K, V> = AssocList<K, V>;
type Branch<K, V> = {left : Trie<K, V>; right : Trie<K, V>; size : Nat};
type Hash = Nat32;
type Key__1<K> = {hash : Hash; key : K};
type Leaf<K, V> = {keyvals : AssocList__1<Key__1<K>, V>; size : Nat};
type List<T> = ?(T, List<T>);
type Metadata =
  {
    #Blob : Blob;
    #Int : Int;
    #MetadataArray : MetadataArray;
    #Nat : Nat;
    #Text : Text
  };
type MetadataArray = [(Text, Metadata)];
type OperatorApproval =
  {expires_at : ?Nat64; memo : ?Blob; spender : Account};
type TokenApproval = {expires_at : ?Nat64; memo : ?Blob; spender : Account};
type TokenId = Nat;
type TokenMetadata =
  {metadata : [(Text, Metadata)]; owner : Account; tokenId : TokenId};
type Transaction =
  {
    icrc7_approve :
      ?{
         created_at_time : ?Nat64;
         expires_at : ?Nat64;
         from : Account;
         memo : ?Blob;
         spender : Account;
         token_ids : ?[TokenId]
       };
    icrc7_transfer :
      ?{
         created_at_time : ?Nat64;
         from : Account;
         memo : ?Blob;
         spender : ?Account;
         to : Account;
         token_ids : [TokenId]
       };
    kind : Text;
    mint : ?{to : Account; token_ids : [TokenId]};
    timestamp : Nat64;
    upgrade :
      ?{
         memo : ?Blob;
         new_metadata : [(Text, Metadata)];
         prev_metadata : [(Text, Metadata)];
         token_id : ?TokenId;
         upgraded_at : ?Nat64
       }
  };
type TransactionId = Nat;
type Trie<K, V> = {#branch : Branch<K, V>; #empty; #leaf : Leaf<K, V>};
actor {
  stable var _cosmicraftsPrincipal : Principal;
  stable var approvalSequentialIndex : Nat;
  stable var balances :
    {#branch : Branch<Text, Nat>; #empty; #leaf : Leaf<Text, Nat>};
  stable var description : ?Text;
  stable var image : ?Blob;
  stable var name : Text;
  stable var operatorApprovals :
    {
      #branch : Branch<Text, [OperatorApproval]>;
      #empty;
      #leaf : Leaf<Text, [OperatorApproval]>
    };
  stable var owner : {owner : Principal; subaccount : ?Blob};
  stable var owners :
    {
      #branch : Branch<Text, [TokenId]>;
      #empty;
      #leaf : Leaf<Text, [TokenId]>
    };
  stable var royalties : ?Nat16;
  stable var royaltyRecipient : ?Account;
  stable var supplyCap : ?Nat;
  stable var symbol : Text;
  stable var tokenApprovals :
    {
      #branch : Branch<TokenId, [TokenApproval]>;
      #empty;
      #leaf : Leaf<TokenId, [TokenApproval]>
    };
  stable var tokens :
    {
      #branch : Branch<TokenId, TokenMetadata>;
      #empty;
      #leaf : Leaf<TokenId, TokenMetadata>
    };
  stable var totalSupply : Nat;
  stable var transactionSequentialIndex : Nat;
  stable var transactions :
    {
      #branch : Branch<TransactionId, Transaction>;
      #empty;
      #leaf : Leaf<TransactionId, Transaction>
    };
  stable var transactionsByAccount :
    {
      #branch : Branch<Text, [TransactionId]>;
      #empty;
      #leaf : Leaf<Text, [TransactionId]>
    };
  stable var transferSequentialIndex : Nat
};
